/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.0.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.example.hello_java_native.api;

import com.example.hello_java_native.model.UserInfoRsp;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2022-07-08T23:36:34.895654300+08:00[Asia/Shanghai]")
@Validated
@Tag(name = "kele", description = "the kele API")
public interface KeleApi {

    default KeleApiDelegate getDelegate() {
        return new KeleApiDelegate() {};
    }

    /**
     * GET /kele
     * 查询用户信息
     *
     * @param id 用户id (optional)
     * @return OK (status code 200)
     */
    @Operation(
        operationId = "queryUserInfoById",
        responses = {
            @ApiResponse(responseCode = "200", description = "OK", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = UserInfoRsp.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/kele",
        produces = { "application/json" }
    )
    default ResponseEntity<UserInfoRsp> queryUserInfoById(
        @Parameter(name = "id", description = "用户id") @Valid @RequestParam(value = "id", required = false) Long id
    ) {
        return getDelegate().queryUserInfoById(id);
    }

}
